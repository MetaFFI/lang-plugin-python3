
# Code generated by MetaFFI. Modify only in marked places.
# Guest code for metaffi_objects.py

import traceback
import sys
import platform
import os
from typing import Any
from ctypes import *


import metaffi_objects

python_plugin_handle = None
def load_python_plugin():
	global python_plugin_handle
	
	if python_plugin_handle == None:
		python_plugin_handle = cdll.LoadLibrary(get_filename_to_load('xllr.python3'))
		python_plugin_handle.set_entrypoint.argstype = [c_char_p, c_void_p]
		python_plugin_handle.xcall_params_ret.argstype = [c_int, py_object, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong)]
		python_plugin_handle.xcall_params_no_ret.argstype = [c_int, py_object, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong)]
		python_plugin_handle.xcall_no_params_ret.argstype = [c_int, py_object, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong)]
		python_plugin_handle.xcall_no_params_no_ret.argstype = [c_int, py_object, POINTER(c_char_p), POINTER(c_ulonglong)]

def get_filename_to_load(fname):
	osname = platform.system()
	if osname == 'Windows':
		return os.getenv('METAFFI_HOME')+'\\'+ fname + '.dll'
	elif osname == 'Darwin':
		return os.getenv('METAFFI_HOME')+'/' + fname + '.dylib'
	else:
		return os.getenv('METAFFI_HOME')+'/' + fname + '.so' # for everything that is not windows or mac, return .so

def dynamicTypeToMetaFFIType(obj):
	if isinstance(obj, float):
		return 1
	elif isinstance(obj, str):
		return 4096
	elif isinstance(obj, int):
		return 32
	elif isinstance(obj, bool):
		return 1024
	else:
		return 32768


load_python_plugin()










@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_keyword_args_metaffi_keyword_args(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(1, py_object(EntryPoint_metaffi_keyword_args_metaffi_keyword_args), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_keyword_args_metaffi_keyword_args'.encode(), CEntryPoint_metaffi_keyword_args_metaffi_keyword_args)

def EntryPoint_metaffi_keyword_args_metaffi_keyword_args(*vals, **named_vals):
	try:
		# call constructor
		ret_0 = metaffi_objects.metaffi_keyword_args(*vals, **named_vals)
		
		
		ret_val_types = (32768,)

		return ( None, ret_val_types , ret_0)

	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)





@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_keyword_args___delattr__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_keyword_args___delattr__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_keyword_args___delattr__'.encode(), CEntryPoint_metaffi_keyword_args___delattr__)

def EntryPoint_metaffi_keyword_args___delattr__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__delattr__(*vals[1:], **named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_keyword_args___dir__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_keyword_args___dir__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_keyword_args___dir__'.encode(), CEntryPoint_metaffi_keyword_args___dir__)

def EntryPoint_metaffi_keyword_args___dir__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__dir__(**named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_keyword_args___eq__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_keyword_args___eq__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_keyword_args___eq__'.encode(), CEntryPoint_metaffi_keyword_args___eq__)

def EntryPoint_metaffi_keyword_args___eq__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__eq__(*vals[1:], **named_vals)
		
		
		
		ret_val_types = (1024,)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_keyword_args___format__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_keyword_args___format__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_keyword_args___format__'.encode(), CEntryPoint_metaffi_keyword_args___format__)

def EntryPoint_metaffi_keyword_args___format__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__format__(*vals[1:], **named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_keyword_args___ge__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_keyword_args___ge__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_keyword_args___ge__'.encode(), CEntryPoint_metaffi_keyword_args___ge__)

def EntryPoint_metaffi_keyword_args___ge__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__ge__(*vals[1:], **named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_keyword_args___getattribute__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_keyword_args___getattribute__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_keyword_args___getattribute__'.encode(), CEntryPoint_metaffi_keyword_args___getattribute__)

def EntryPoint_metaffi_keyword_args___getattribute__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__getattribute__(*vals[1:], **named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_keyword_args___getitem__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_keyword_args___getitem__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_keyword_args___getitem__'.encode(), CEntryPoint_metaffi_keyword_args___getitem__)

def EntryPoint_metaffi_keyword_args___getitem__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__getitem__(*vals[1:], **named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_keyword_args___getstate__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_keyword_args___getstate__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_keyword_args___getstate__'.encode(), CEntryPoint_metaffi_keyword_args___getstate__)

def EntryPoint_metaffi_keyword_args___getstate__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__getstate__(**named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_keyword_args___gt__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_keyword_args___gt__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_keyword_args___gt__'.encode(), CEntryPoint_metaffi_keyword_args___gt__)

def EntryPoint_metaffi_keyword_args___gt__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__gt__(*vals[1:], **named_vals)
		
		
		
		ret_val_types = (1024,)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_keyword_args___le__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_keyword_args___le__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_keyword_args___le__'.encode(), CEntryPoint_metaffi_keyword_args___le__)

def EntryPoint_metaffi_keyword_args___le__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__le__(*vals[1:], **named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_keyword_args___lt__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_keyword_args___lt__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_keyword_args___lt__'.encode(), CEntryPoint_metaffi_keyword_args___lt__)

def EntryPoint_metaffi_keyword_args___lt__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__lt__(*vals[1:], **named_vals)
		
		
		
		ret_val_types = (1024,)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_keyword_args___ne__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_keyword_args___ne__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_keyword_args___ne__'.encode(), CEntryPoint_metaffi_keyword_args___ne__)

def EntryPoint_metaffi_keyword_args___ne__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__ne__(*vals[1:], **named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_keyword_args___reduce__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_keyword_args___reduce__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_keyword_args___reduce__'.encode(), CEntryPoint_metaffi_keyword_args___reduce__)

def EntryPoint_metaffi_keyword_args___reduce__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__reduce__(**named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_keyword_args___reduce_ex__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_keyword_args___reduce_ex__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_keyword_args___reduce_ex__'.encode(), CEntryPoint_metaffi_keyword_args___reduce_ex__)

def EntryPoint_metaffi_keyword_args___reduce_ex__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__reduce_ex__(*vals[1:], **named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_keyword_args___repr__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_keyword_args___repr__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_keyword_args___repr__'.encode(), CEntryPoint_metaffi_keyword_args___repr__)

def EntryPoint_metaffi_keyword_args___repr__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__repr__(**named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_keyword_args___setattr__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_keyword_args___setattr__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_keyword_args___setattr__'.encode(), CEntryPoint_metaffi_keyword_args___setattr__)

def EntryPoint_metaffi_keyword_args___setattr__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__setattr__(*vals[1:], **named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_keyword_args___sizeof__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_keyword_args___sizeof__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_keyword_args___sizeof__'.encode(), CEntryPoint_metaffi_keyword_args___sizeof__)

def EntryPoint_metaffi_keyword_args___sizeof__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__sizeof__(**named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_keyword_args___str__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_keyword_args___str__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_keyword_args___str__'.encode(), CEntryPoint_metaffi_keyword_args___str__)

def EntryPoint_metaffi_keyword_args___str__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__str__(**named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_keyword_args_set_arg(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(1, py_object(EntryPoint_metaffi_keyword_args_set_arg), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_keyword_args_set_arg'.encode(), CEntryPoint_metaffi_keyword_args_set_arg)

def EntryPoint_metaffi_keyword_args_set_arg(*vals, **named_vals):
	try:
		# call method
		
		
		vals[0].set_arg(*vals[1:], **named_vals)
		
		
		
		ret_val_types = ()

		return ( None, ret_val_types )
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_keyword_args_Releasemetaffi_keyword_args(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(1, py_object(EntryPoint_metaffi_keyword_args_Releasemetaffi_keyword_args), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_keyword_args_Releasemetaffi_keyword_args'.encode(), CEntryPoint_metaffi_keyword_args_Releasemetaffi_keyword_args)

def EntryPoint_metaffi_keyword_args_Releasemetaffi_keyword_args(*vals):
	try:

		if len(vals) != 1:
			raise ValueError('received parameter in metaffi_keyword_args_Releasemetaffi_keyword_args expects exactly one parameter')

		# xcall release object
		python_plugin_handle.release_object(vals[0])
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_positional_args_metaffi_positional_args(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(1, py_object(EntryPoint_metaffi_positional_args_metaffi_positional_args), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_positional_args_metaffi_positional_args'.encode(), CEntryPoint_metaffi_positional_args_metaffi_positional_args)

def EntryPoint_metaffi_positional_args_metaffi_positional_args(*vals, **named_vals):
	try:
		# call constructor
		ret_0 = metaffi_objects.metaffi_positional_args(*vals, **named_vals)
		
		
		ret_val_types = (32768,)

		return ( None, ret_val_types , ret_0)

	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_positional_args_Gett(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_positional_args_Gett), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_positional_args_Gett'.encode(), CEntryPoint_metaffi_positional_args_Gett)

def EntryPoint_metaffi_positional_args_Gett(*obj):
	try:

		
		ret_val_types = (32768,)

		if len(obj) != 1:
			raise ValueError('received parameter in metaffi_positional_args_Gett expects exactly one parameter')

		return (None, ret_val_types, obj[0].t)
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_positional_args_Sett(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(1, py_object(EntryPoint_metaffi_positional_args_Sett), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_positional_args_Sett'.encode(), CEntryPoint_metaffi_positional_args_Sett)

def EntryPoint_metaffi_positional_args_Sett(*vals):
	try:

		if len(vals) != 2:
			raise ValueError('received parameters in metaffi_positional_args_Sett expects exactly two parameters')

		vals[0].t = vals[1]

		
		ret_val_types = ()

		return (None, ret_val_types)
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)





@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_positional_args___delattr__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_positional_args___delattr__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_positional_args___delattr__'.encode(), CEntryPoint_metaffi_positional_args___delattr__)

def EntryPoint_metaffi_positional_args___delattr__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__delattr__(*vals[1:], **named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_positional_args___dir__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_positional_args___dir__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_positional_args___dir__'.encode(), CEntryPoint_metaffi_positional_args___dir__)

def EntryPoint_metaffi_positional_args___dir__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__dir__(**named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_positional_args___eq__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_positional_args___eq__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_positional_args___eq__'.encode(), CEntryPoint_metaffi_positional_args___eq__)

def EntryPoint_metaffi_positional_args___eq__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__eq__(*vals[1:], **named_vals)
		
		
		
		ret_val_types = (1024,)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_positional_args___format__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_positional_args___format__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_positional_args___format__'.encode(), CEntryPoint_metaffi_positional_args___format__)

def EntryPoint_metaffi_positional_args___format__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__format__(*vals[1:], **named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_positional_args___ge__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_positional_args___ge__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_positional_args___ge__'.encode(), CEntryPoint_metaffi_positional_args___ge__)

def EntryPoint_metaffi_positional_args___ge__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__ge__(*vals[1:], **named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_positional_args___getattribute__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_positional_args___getattribute__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_positional_args___getattribute__'.encode(), CEntryPoint_metaffi_positional_args___getattribute__)

def EntryPoint_metaffi_positional_args___getattribute__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__getattribute__(*vals[1:], **named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_positional_args___getstate__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_positional_args___getstate__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_positional_args___getstate__'.encode(), CEntryPoint_metaffi_positional_args___getstate__)

def EntryPoint_metaffi_positional_args___getstate__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__getstate__(**named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_positional_args___gt__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_positional_args___gt__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_positional_args___gt__'.encode(), CEntryPoint_metaffi_positional_args___gt__)

def EntryPoint_metaffi_positional_args___gt__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__gt__(*vals[1:], **named_vals)
		
		
		
		ret_val_types = (1024,)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_positional_args___hash__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_positional_args___hash__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_positional_args___hash__'.encode(), CEntryPoint_metaffi_positional_args___hash__)

def EntryPoint_metaffi_positional_args___hash__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__hash__(**named_vals)
		
		
		
		ret_val_types = (32,)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_positional_args___le__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_positional_args___le__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_positional_args___le__'.encode(), CEntryPoint_metaffi_positional_args___le__)

def EntryPoint_metaffi_positional_args___le__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__le__(*vals[1:], **named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_positional_args___lt__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_positional_args___lt__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_positional_args___lt__'.encode(), CEntryPoint_metaffi_positional_args___lt__)

def EntryPoint_metaffi_positional_args___lt__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__lt__(*vals[1:], **named_vals)
		
		
		
		ret_val_types = (1024,)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_positional_args___ne__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_positional_args___ne__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_positional_args___ne__'.encode(), CEntryPoint_metaffi_positional_args___ne__)

def EntryPoint_metaffi_positional_args___ne__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__ne__(*vals[1:], **named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_positional_args___reduce__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_positional_args___reduce__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_positional_args___reduce__'.encode(), CEntryPoint_metaffi_positional_args___reduce__)

def EntryPoint_metaffi_positional_args___reduce__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__reduce__(**named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_positional_args___reduce_ex__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_positional_args___reduce_ex__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_positional_args___reduce_ex__'.encode(), CEntryPoint_metaffi_positional_args___reduce_ex__)

def EntryPoint_metaffi_positional_args___reduce_ex__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__reduce_ex__(*vals[1:], **named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_positional_args___repr__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_positional_args___repr__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_positional_args___repr__'.encode(), CEntryPoint_metaffi_positional_args___repr__)

def EntryPoint_metaffi_positional_args___repr__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__repr__(**named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_positional_args___setattr__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_positional_args___setattr__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_positional_args___setattr__'.encode(), CEntryPoint_metaffi_positional_args___setattr__)

def EntryPoint_metaffi_positional_args___setattr__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__setattr__(*vals[1:], **named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_positional_args___sizeof__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_positional_args___sizeof__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_positional_args___sizeof__'.encode(), CEntryPoint_metaffi_positional_args___sizeof__)

def EntryPoint_metaffi_positional_args___sizeof__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__sizeof__(**named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_positional_args___str__(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(1, py_object(EntryPoint_metaffi_positional_args___str__), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_positional_args___str__'.encode(), CEntryPoint_metaffi_positional_args___str__)

def EntryPoint_metaffi_positional_args___str__(*vals, **named_vals):
	try:
		# call method
		
		
		ret_0 = vals[0].__str__(**named_vals)
		
		
		
		ret_val_types = (dynamicTypeToMetaFFIType(ret_0),)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	

@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_positional_args_set_arg(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(1, py_object(EntryPoint_metaffi_positional_args_set_arg), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_positional_args_set_arg'.encode(), CEntryPoint_metaffi_positional_args_set_arg)

def EntryPoint_metaffi_positional_args_set_arg(*vals, **named_vals):
	try:
		# call method
		
		
		vals[0].set_arg(*vals[1:], **named_vals)
		
		
		
		ret_val_types = ()

		return ( None, ret_val_types )
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_metaffi_positional_args_Releasemetaffi_positional_args(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(1, py_object(EntryPoint_metaffi_positional_args_Releasemetaffi_positional_args), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_metaffi_positional_args_Releasemetaffi_positional_args'.encode(), CEntryPoint_metaffi_positional_args_Releasemetaffi_positional_args)

def EntryPoint_metaffi_positional_args_Releasemetaffi_positional_args(*vals):
	try:

		if len(vals) != 1:
			raise ValueError('received parameter in metaffi_positional_args_Releasemetaffi_positional_args expects exactly one parameter')

		# xcall release object
		python_plugin_handle.release_object(vals[0])
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)





